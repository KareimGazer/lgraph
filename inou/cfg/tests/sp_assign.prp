%o1 as __bits:2
%o2 as __bits:4
%o3 as __bits:4
%o4 as __bits:4
%o5 as __bits:4

//method construct
m1 = ::{
  return 11u4bits
}

//method construct as?
//as means ones it is defined, it cannot be assigned to other value or function
m2 as ::{
  return 12u4bits
}


m3 as counter

m4 = 13u4bits

aaa = 3u2bits
%o1 = m1    //function call, w/ previous defined
%o2 = m2    //function call? w/ previous defined 
%o3 = m3    //function call, defined @ other files
%o4 = m4    //value assignment, how to diff with m3?
%o5 = m5    //value assignment, compile error
%o6 = m6    //function call, w/o previous defined

m6 = ::{
  return 14u4bits
}


//if (function declared before) 
//    good! real func
//else if (function declared after)
//    fine! travers back and forth 
//else
//    --> pure value assignment(ex. m4)
//    --> function declared @ other file (ex. counter)
//    --> cannot differentiate these 2 cases!
